{"ast":null,"code":"var _jsxFileName = \"/home/anmol/Documents/My_Projects/Expense-tracker/expense-tracker-2/expense_tracker/Client/src/Context/GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: false\n};\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  async function getTransaction() {\n    try {\n      const res = await axios.get('/api/v1/transactions');\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: error.response.data.Error\n      });\n    }\n  }\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  };\n\n  const AddTransaction = transaction => {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: transaction\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      AddTransaction,\n      getTransaction,\n      error: state.error,\n      loading: state.loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["/home/anmol/Documents/My_Projects/Expense-tracker/expense-tracker-2/expense_tracker/Client/src/Context/GlobalState.js"],"names":["createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransaction","res","get","type","payload","data","response","Error","deleteTransaction","id","AddTransaction","transaction"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAC;AACfC,EAAAA,YAAY,EAAC,EADE;AAEfC,EAAAA,KAAK,EAAC,IAFS;AAGfC,EAAAA,OAAO,EAAC;AAHO,CAAnB;AAKA,OAAO,MAAMC,aAAa,gBAACR,aAAa,CAACI,YAAD,CAAjC;AACP,OAAO,MAAMK,cAAc,GAAC,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA;AAAD,GAAc;AAEvC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBX,UAAU,CAACC,UAAD,EAAYE,YAAZ,CAAjC;;AACA,iBAAeS,cAAf,GAA+B;AACvB,QAAI;AACA,YAAMC,GAAG,GAAC,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAhB;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAC,kBADA;AAELC,QAAAA,OAAO,EAACH,GAAG,CAACI,IAAJ,CAASA;AAFZ,OAAD,CAAR;AAMH,KARD,CAQE,OAAOZ,KAAP,EAAc;AACZM,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAC,mBADA;AAELC,QAAAA,OAAO,EAACX,KAAK,CAACa,QAAN,CAAeD,IAAf,CAAoBE;AAFvB,OAAD,CAAR;AAIH;AACR;;AACD,QAAMC,iBAAiB,GAAEC,EAAD,IAAO;AAC3BV,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,oBAAN;AACDC,MAAAA,OAAO,EAACK;AADP,KAAD,CAAR;AAGH,GAJD;;AAKA,QAAMC,cAAc,GAAEC,WAAD,IAAgB;AACjCZ,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC,iBAAN;AAAwBC,MAAAA,OAAO,EAACO;AAAhC,KAAD,CAAR;AACH,GAFD;;AAGA,sBAEI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACnB,MAAAA,YAAY,EAACM,KAAK,CAACN,YAApB;AAAkCgB,MAAAA,iBAAlC;AAAoDE,MAAAA,cAApD;AAC9BV,MAAAA,cAD8B;AACfP,MAAAA,KAAK,EAACK,KAAK,CAACL,KADG;AACGC,MAAAA,OAAO,EAACI,KAAK,CAACJ;AADjB,KAA/B;AAAA,cAESG;AAFT;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH,CAnCM;;GAAMD,c;;KAAAA,c","sourcesContent":["import {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n\nconst initialState={\n    transactions:[],\n    error:null,\n    loading:false\n}\nexport const GlobalContext=createContext(initialState);\nexport const GlobalProvider=({children}) =>{\n    \n    const [state,dispatch]=useReducer(AppReducer,initialState);\n    async function getTransaction(){\n            try {\n                const res=await axios.get('/api/v1/transactions');\n                dispatch({\n                    type:\"GET_TRANSACTIONS\",\n                    payload:res.data.data\n                    \n                })\n                \n            } catch (error) {\n                dispatch({\n                    type:\"TRANSACTION_ERROR\",\n                    payload:error.response.data.Error\n                })\n            }\n    }\n    const deleteTransaction=(id) =>{\n        dispatch({type:\"DELETE_TRANSACTION\",\n                payload:id\n    })\n    }\n    const AddTransaction=(transaction) =>{\n        dispatch({type:\"ADD_TRANSACTION\",payload:transaction});\n    }\n    return(\n   \n        <GlobalContext.Provider value={{transactions:state.transactions ,deleteTransaction,AddTransaction\n        ,getTransaction,error:state.error,loading:state.loading}} >\n                {children}\n        </GlobalContext.Provider>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}